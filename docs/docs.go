// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/songs": {
            "get": {
                "description": "Get songs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get songs",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "The Weeping",
                        "description": "Filter for Song",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "DIM",
                        "description": "Filter for Group",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "lorem ipsum...",
                        "description": "Filter for Text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "https://www.youtube.com/watch?v=_UCo04xk2Ik",
                        "description": "Filter for Link",
                        "name": "link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2025-01-03",
                        "description": "Filter for Release Date",
                        "name": "releaseDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GetSongsResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "некорректные параметры",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "не удалось получить песни",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Put song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Put song",
                "parameters": [
                    {
                        "example": "The Weeping",
                        "description": "Song Title",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "DIM",
                        "description": "Group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "2024-04-17",
                        "description": "Release Date",
                        "name": "releaseDate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "lorem ipsum...",
                        "description": "Text",
                        "name": "text",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "https://www.youtube.com/watch?v=_UCo04xk2Ik",
                        "description": "Link",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SongDto"
                        }
                    },
                    "400": {
                        "description": "некорректные параметры",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Post song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Post song",
                "parameters": [
                    {
                        "example": "The Weeping",
                        "description": "Song Title",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "DIM",
                        "description": "Group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SongDto"
                        }
                    },
                    "400": {
                        "description": "некорректные параметры",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "не удалось создать песню",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs/{id}": {
            "delete": {
                "description": "Delete song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Delete song",
                "parameters": [
                    {
                        "type": "string",
                        "example": "048fec20-b500-4d44-8698-db46f7d86ae8",
                        "description": "Song UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "песня удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "не удалось декодировать uuid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "не удалось удалить песню",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs/{id}/{row}": {
            "get": {
                "description": "Get song's row",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get song's row",
                "parameters": [
                    {
                        "type": "string",
                        "example": "048fec20-b500-4d44-8698-db46f7d86ae8",
                        "description": "Song UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "description": "Song's row",
                        "name": "row",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "куплет",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "не удалось декодировать uuid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "не удалось получить куплет",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.GetSongsResponseDto": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SongDto"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.SongDto": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "songId": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Test Project",
	Description:      "This is a test project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
